ORG手册
* 1.介绍 
** 1.1 简介
   org模式是一种快速、高效的纯文本标记语言，用来保存笔记，记录TODO列表和
项目计划。它也是一种对文字编辑和可重复研究有特别支持的创作系统。
   大纲模式(outline mode)也会在顶层调用org模式，使其能够更好的架构大文件
的内容。可视化循环折叠和结构编辑使工作更加有条理。内置的表格编辑器使创建表格
更加容易。纯文本类URL链接可以把网站、电子邮件、usenet messages、BBDB entries
及任何项目相关的文件连接起来。
   org围绕包含有关项目列表或信息的纯文本笔记文件发展出了结构化的任务管理。
项目计划和任务管理使用了作为大纲节点的元数据。基于这个数据，在查询和创建动态日程
查看(同时集成了Emacs的日历和日记)时，它可以提取出特定的入口。org能够实现许多
不同项目的计划组合，例如David Allen`s GTD system。
   org可以通过输出不同格式的文件，如HTML、LATEX、Open Document和Markdown
充当某一创作系统。新的后端可以从已有的或从scratch定义的导出。
   org文件通过源代码块功能，使其非常适合用于包含代码示例的技术文档写作。org源
代码块十分的有用，可以在适当的位置对它们进行评估，它们的结果可以在文件内获取。
这使得创建单文件可重复研究纲要成为可能。
   org保留了简单特性。初次使用，它就想一个简单明了的大纲视图。没有强制的复杂
功能，但是当你需要时，也有许多功能可以调用。org是一个工具盒。实际上，许多用户
只使用了org的一小部分功能，他们知道还有更多的功能可以在任何需要的时候使用。
   所有的这些由纯粹的纯文本文件实现，这个文件格式更轻便且不过时。org运行于
Emacs中。Emacs是可广泛移植的程序，所以org也几乎可在任何主流平台上运行。
   org的网站提供了最新版本的org，及一些额外的信息，常见问题，教程等等。
请访问https://orgmode.org
   最新版本（7.3）的平装纸质手册已经由Network Theory Ltd发行。
** TODO 1.2 安装
   org包含在了最新的GNU Emacs版本中，所以你可能并不需要去安装它。大多数用户
可以简单的激活org模式并探索其功能。
   如果，因某些原因，你需要去安装org的最新版本。你可以使用一下三种方法：
1.使用Emacs的包管理系统；
2.以文档的形式下载org；
3.通过org的git仓库。
我们强烈建议只使用其中的一种方式。

使用Emacs的包管理系统

** 1.3激活
   org模式缓冲区需要打开字体锁定，Emacs中是默认打开的。如果你不想全局打开字体
锁定功能，那么就单独在org模式中打开，把以下代码加入达到你的配置中
(add-hook 'org-mode-hook 'turn-on-font-lock)
   在org模式和一些Elisp包之间会存在一些兼容问题，具体请查看（15.12.2冲突）。
请花一些时间查看列表。
   为了有更好的体验，这里有三个org命令应当绑定到Emacs的全局快捷键中，而不仅仅
是org缓冲区，它们分别是org-store-link,org-capture,org-agenda。Emacs中
有一些快捷键是为用户保留的。以下是一些建议，你也可以根据自己的喜好去绑定。
(global-set-key (kbd "C-c l") 'org-store-link
(global-set-key (kbd "C-c a") 'org-agenda)
(global-set-key (kbd "C-c c") 'org-capture)
以.org为扩展名的文件默认使用org模式打开。如果想打开一个后缀名不是org的文件，可以
在文件首行加入以下字符：
    MY PROJECTS    -*- mode: org; -*-
这些字符使得当前编辑区打开org模式而不论文件后缀名是什么。也可以参考变量
org-insert-mode-line-in-empty-file.
   当前区域激活的情况下，许多org命令是可以使用的。为了确保命令可用，你需要打开
transient-mark-mode，默认情况下是打开的。如果你不喜欢transient-mark-mode,
你可以通过用鼠标选择的方式新建一个活动区域，或者在移动光标钱按两次C-SPC。
** TODO 1.4反馈
   如果你在使用org过程中发现问题，或者你有问题、建议、点子等，请发邮件给我们，
邮箱是emacs-orgmode@gnu.org。
** TODO 1.5本手册的字体显示惯例

* 2.文本结构
   org是一个大纲形式的文本。大纲允许一个文件按等级结构来组织，这个结构至少对我
来说，是组织笔记和想法的最好呈现。这个结构的总览是由折叠来完成的，例如隐藏文件的
大部分内容，只显示文件的概览及正在工作的部分。org通过一个单独的org折叠循环命令
来折叠显示的内容和隐藏功能，极大地简化了内容显示，这个循环功能绑定在了TAB键上。
** 2.1标题
   标题定义了文件的大纲树。标题在org中以*号开头，在页面的边缘。举例来说，
  * 一级标题
  ** 二级标题
  *** 三级标题
      内容
  *** 三级标题
      其他内容
  * 另一个一级标题
这些定义在org-footnote-section中的名称是保留关键字。不要用它作为你的文件标题
一些人会觉得多个*号太碍眼，想要以空白符加上一个单一的星号来作为标题的开头，可以
查看15.9章【清爽视图】，236页。
一个子目录下的空行被认为是该子目录的一部分，它同样会被子目录折叠。但是，当你留下
至少两个空行时，在你折叠时会留下一个空行。这是你可以更好的组织折叠后的视图。
查看变量org-cycle-separator-lines，你也可以通过这个变量来调整它。
** 2.2可视化循环折叠
*** 2.2.1全局和局部循环折叠
    大纲化使得在编辑区部分隐藏文件内容成为可能。org中使用两个快捷键来完成编辑区
的可视化折叠循环，TAB和S-TAB。
TAB(org-cycle)
            子目录循环：折叠当前的目录
            -> 主目录 -> 子目录 -> 次级目录--
            |                            |
             ----------------------------
              光标必须在标题内方可生效。
S-TAB（org-global-cycle）
C-u TAB 全局折叠：在整个编辑区内进行循环折叠。
            子目录循环：折叠整个文档的目录
            -> 主目录 -> 子目录 -> 次级目录--
            |                            |
             ----------------------------
       当S-TAB被调用时带有前缀数字参数N时，目录会展开第N个标题。
       注意，在一个表格中(查看第3章，表格，17页)，S-TAB是跳转到
       之前的区域。
       你同样可以只用TAB键实现全文档折叠，只需要把光标移动到整个
       文档的开头，而不是文档的某一标题。同时，org-cycle-global-at-bob
       的值默设为空值。
C-u C-u TAB(org-set-startup-visibility)
       往回跳转到文档视图编辑区的初始状态。
C-u C-u C-u TAB(outline-show-all)
       显示全部，包括折叠起来的内容。
C-c C-r(org-reveal)
       显示光标所在处的文档内容，下级标题和下级的层次。这个功能对于树形结构
       命令或是日历命令非常的有用（树形结构命令请参看2.5节，11页；日历命
       令请参看10.5节，115页）。在该命令前输入前缀参数的话，可以显示每一标题
       下的所有层级的标题。在该命令前输入双参数的话，也可以显示当前内容的父级
       标题以下所有的子标题。
C-c C-k(outline-show-branches)
       显示所有子目录的标题及其次级标题。
C-c TAB(outline-show-children)
       显示所有子目录的直接下级标题。如果带有参数N，显示下级第N个子标题。
C-c C-x b(org-tree-to-indirect-buffer)
       在当前编辑区只显示本级标题以下内容，其他内容被隐藏。输入前缀参数N，则
       在当前编辑区内只显示N行的内容。
C-c C-x v(org-copy-visible)
       复制该区域的可见内容至粘贴板。

*** 2.2.2初始化视图
    当emacs第一次访问一个org文件，全局状态默认为大纲预览。比如，只看到该文档
的一级标题。可以在org-startup-folded变量中进行修改。也可以在每一个文件底部
任意位置添加以下内容：
    #+STARTUP: overview
    #+STARTUP: content
    #+STARTUP: showall
    #+STARTUP: showeverything
    此外，任意带有‘可视化’属性的入口都可以获得可视化，并且可以根据情况进行
调整。可以依据的属性有“折叠”，“子”，“目录”，和“全部”。
C-u C-u TAB（org-set-startup-visibility）
    回跳至当前编辑区的开始视图。简单的说，无论开始选项或是可视化属性在个人
入口是什么，都可以被调用。
*** 2.2.3获取隐藏编辑内容
    某些时候，你可能不经意地编辑了编辑区的隐藏内容，还混淆了编辑的内容，还不知道
如何撤销这个错误的编辑。设置org-catah-invisible-edits这个变量为non-nil
可以解决这个问题。查看这个变量的文档，你可以了解org是如何获取不可视的编辑内容
和处理过程。
** 2.3操作
    以下命令可以在编辑区的标题之间进行跳转。
 C-c C-n(org-next-visible-heading)
    下一标题
 C-c C-p(org-previous-visible-heading)
    上一标题
 C-c C-f(org-forward-heading-same-level)
    同级的下一标题
 C-c C-b(org-backward-heading-same-level)
    同级的上一标题
 C-c C-u(outline-up-heading)
    回到高一级的标题
 C-c C-j(org-goto)
    在不改变当前大纲视图的情况下跳转到不同位置。在一个临时编辑区显示文档的结构，
 你可以使用一下按键达到你的目的：
    TAB         循环视图
    DOWN/UP     上/下一个可视的标题
    RET         选择这个位置
    /           Sparse-tree搜索
    如果你关闭org-goto-auto-isearch，就可以使用一下快捷键。
    n/p          下/上一个可视标题
    f/b          下/上一个同级标题
    u            上一级标题
    0....9       数字参数
    q            退出
    请查看变量org-goto-interface文档。
** 2.4结构编辑
  M-RET(org-meta-return) (该命令在spacemacs下无用，变成M-RET RET)
      插入一个新的标题，条目或行。
      如果在一行的开头及一个标题，或在光标处有一个纯列表项使用这个命令，会在当前
      行之前创建一个新的标题或是项目。当这个命令用在文字内容的某一行的开头，它将
      会把这一行转换成标题。
      当这个命令用在一行的中间位置，这行将会被分开，后面的部分将会转换成新的项目
      或是标题。如果你不想要这行被分开，请自定义变量org-M-RET-may-split-line。
      在这个命令前加上前缀C-u将会在当前的子目录的最后创建一个新的标题，同时保留
      原目录。加上双前缀C-u C-u的话，将会在父级次目录下创建一个新标题。

 C-RET（org-insert-heading-respcet-content）
      在当前子目录的最后插入一个新标题。

 M-S-RET(org-insert-todo-heading)
      插入一个与当前标题同级的TODO事项。如果是在一行文字的中间，则把光标所在位置
      往后的内容另起一行并建立一个新的TODO事项。
      可参考变量org-treat-insert-todo-heading-as-state-change。

 C-S-RET(org-insert-todo-heading-respect-content)
      在当前子目录的最后插入一个新的TODO事项。

 TAB(org-cycle)
      在一个没有内容的开头，输入一个*使其成为一级标题，按下tab键后使其转换成二级标题
      再次按下后转换成二级标题，再次按下后转换成三级标题，最后按下则又转换成一级标题，
      如此往复循环。

 M-LEFT(org-do-promote)
 M-RIGHT(org-do-demote)
       这两个命令是将一个标题的级别升高或减小。
 M-S-LEFT(org-do-subtree)
 M-S-RIGHT(org-do-subtree)
       将一个子目录级别升高或减小

M-UP(org-move-subtree-up)
M-DOWN(org-move-subtree-down)
       这两个命令是可以将同级的标题相互的上下移动。

C-c @(org-mark-subtree)  
       全选光标所在的子目录/标题，包含标题。持续按这个组合键将继续向下选定同级标题及
       其内容。

C-c C-x C-w(org-cut-subtree)
       删除一个标题及其内容，并放在粘贴板中。此命令只对标题生效。此命令可以带一个
       前缀参数N，表示删除连续的N个标题。

C-c C-x M-w(org-copysubtree)(该命令在spacemacs下无用，可以用p命令粘贴)
       把粘贴板中的内容粘贴进来，可以带前缀参数N，功能同上。

C-c C-x C-y(org-paste-subtree)
       召回一个在粘贴板中的标题及其内容。这个命令不会调整子目录的层级以保证在粘贴
       位置的结构保持完美。召回层级也可以用一个数字前缀来具体确定，或是在召回后接上
       “****”。

C-y(org-yank)
       依据变量org-yank-adjusted-subtree和org-yank-folded-subtrees，org的
       内置召回命令以一个聪明的方式粘贴折叠好的子目录，这个命令与C-c C-x C-y是一
       样的。因为不同的默认设置，没有层级调整，但是召回树会被折叠，除非故意这么做，
       这也会使之前的可视文本消失。任意前缀将会强制执行一个召回命令，参数会直接传递。
       一个更好的方法召回是使用命令C-c C-y。如果你在召回之后使用yank-pop，它会召回
       之前被删除的条目，没有任何调整和折叠。

C-c C-x c(org-clone-subtree-with-time-shift)
       复制一个子目录，并且保持层级相同。建议你使用复制的份数，如果层级的时间节点
       需要调整，你也可以具体化复制的份数。这是非常有用的，举个例子来说，创建一些
       关于系列课程的任务。更多细节，请查阅org-clone-subtree-with-time-shift
       的文档。

C-c C-w(org-refile)
       把一个入口或区域重新定位到一个不同的位置。具体请查看9.5【再次归档和复制】
       P99。

C-c ^(org-sort)
       把同级入口进行分类。在一个活动区域使用此命令，所有的入口将会被分类。因此所有
       当前标题下的子项会被分类。这个命令提供的分类方式可以使字母，数字，时间（激活
       时的时间点优先），创建时间，计划时间，截止时间（优先级，TODO关键字），属性
       值。反向分类也是可行的。你可以提供自己的函数来提取分类关键字。加上前缀C-u，
       可以把分类改成事件感知。

C-x n s(org-narrow-to-subtree)（spacemacs下不可用）
       缩小当前子目录的编辑区。即只显示当前子标题，其他内容被隐藏。

C-x n b(org-narrow-to-block)
       缩小当前编辑去到当前的“块”中。

C-x n w(widen)
       放大编辑区，取消缩小选项。(与C-x n s 对应)

C-c *(org-toggle-heading)
       把一个普通行或纯文本项转换成一个标题，即在当前位置形成一个子标题。不换行，也不会
       在最后，就是在当前行。也可以把一个标题去掉*,从而转换成一个普通文本。如果是一个
       选定的区域，则把这个区域的所有行转换成标题。如果选定区域的第一行是一个item，
       则只有这个item转换成标题。最后，如果第一行是一个标题，则去掉区域内所有标题的*。

   在一个活动的选定区域内，例如Transient Mark mode激活，则该区域的标题升级或降级均
对内部的所有标题生效。选定一个标题区域最好的方法是，把光标点和标记点放在一行的开头，标
记点在标题的开头，光标在标题所在行最后。注意，当光标在一个表格内，Meta-Cursor键则变成
了不同的功能。  


** 2.5 Sparse Trees 
org模式的一个重要特点就是能够在一个大纲视图内，为一个选定的信息创建sparse trees，这时，
整个文档就可以尽可能的保持折叠状态，但是选定的信息则是在标题结构上显示出来。试一试，你
就会知道它是如何工作的。
   org-mode包含一些可以创建这种tree的命令，所有这些命令都可以用调度程序来使用。
C-c /(org-sparse-tree)
       这个命令提供了一个额外的入口，用来选择spares tree下的一些命令。

C-c / r or C-c / /(org-occur)
       提供一个正则表达式输入框，用来显示sparse tree的所有匹配项。如果匹配项在一个
       标题内，则这个标题就会被显示出来。如果匹配项在一个入口的内，则标题和内容均会
       被显示出来。为了提供最小化的文本内容，在匹配项之上的层级结构也会显示出来，也
       包括匹配项以下的标题。每一个匹配项都会高亮显示，高亮会在编辑命令编辑后的编辑
       区消失，或是通过快捷键C-c C-c来实现。当这个命令加上前缀C-u时，之前的高亮会
       保留，调用这个命令的请求有一堆。

M-g n or M-g M-n(next-error)
       跳转到当前编辑区的下一个sparse tree匹配项。

M-g p or M-g M-p(previous-error)
       跳转到当前编辑区的上一个sparse tree匹配项。

    对于一些常用的特殊搜索字符串的sparse tree，你可以使用变量org-agenda-custom-commands
来定义快捷键。这些命令通过日程调度程序来实现其功能。（参看10.2【日程调度器】，103页）
    举例来说：
       (setq org-agenda-custom-commands
             '(("f" occur-tree "FIXME")))
这个函数定义了按键f作为sparse tree搜索字符串'FIXME'的快捷键。
     其他选择标题的sparse tree命令是基于TODO关键字、标签或是属性及一些在本手册后面
讨论的内容。
     你可以使用Emacs命令ps-print-buffer-with-faces来打印sparse tree内容，但是
不会打印隐藏的内容。或者，你可以用命令C-c C-e v来输出文件的可见部分并打印。

** 2.6纯列表
在一个大纲树的条目中，手动格式化的列表可以提供一些额外的结构。它们也提供了一种创建复选
框的方法（参看5.6【复选框】，55页）。org提供了编辑器，可以用来解析和格式化这种列表，
并且可以输出它们(参看12章【输出】，138页)。
   org可以识别规则列表，不规则列表和描述列表。
   ·不规则列表项以“-”，“+”或“*”为描述符号。
   ·规则列表项以



